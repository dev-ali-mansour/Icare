[versions]
androidGradlePlugin = "8.12.0"
androidTools = "31.12.0"
androidDesugarJdkLibs = "2.1.5"
androidxTracing = "1.3.0"
kotlin = "2.2.0"
ksp = "2.2.0-2.0.2"
appcompat = "1.7.1"
coreKtx = "1.16.0"
junit = "4.13.2"
robolectric = "4.15.1"
truth = "1.4.4"
mockk = "1.14.5"
turbine = "1.2.1"
mockWebServer = "5.1.0"
junitVersion = "1.3.0"
androidxLifecycle = "2.9.2"
androidxLintGradle = "1.0.0-alpha05"
activityCompose = "1.10.1"
constrainLayout = "1.1.1"
navigationCompose = "2.9.3"
composeBom = "2025.07.00"
coilCompose = "2.7.0"
appUpdates = "2.1.0"
androidxBrowser = "1.9.0"
multidex = "2.0.1"
koinBom = "4.1.0"
koinAnnotations = "2.1.0"
splashScreen = "1.0.1"
coroutine = "1.10.2"
ktxSerialization = "1.9.0"
firebaseBom = "34.0.0"
firebaseCrashlyticsPlugin = "3.0.5"
googleAuth = "21.4.0"
timber = "5.0.1"
retrofit = "3.0.0"
ktxSerConverter = "1.0.0"
okhttp3 = "5.1.0"
room = "2.7.2"
crypto = "1.1.0"
sqlcipher = "4.9.0"
sqlite = "2.5.2"
ktlint = "13.0.0"
detekt = "1.23.8"
gmsPlugin = "4.4.3"
googleOss = "17.2.1"
googleOssPlugin = "0.10.6"
crashlyticsPlugin = "3.0.5"
firebasePerfPlugin = "2.0.0"
dependencyGuard = "0.5.0"
secrets = "2.0.1"
jacoco = "0.8.12"

[libraries]
# AndroidX Compose
androidx-compose-bom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }
androidx-compose-foundation = { group = "androidx.compose.foundation", name = "foundation" }
androidx-ui = { module = "androidx.compose.ui:ui" }
androidx-compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
compose-runtime = { group = "androidx.compose.runtime", name = "runtime" }
compose-animation = { group = "androidx.compose.animation", name = "animation" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "constrainLayout" }
androidx-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coilCompose" }
coil-gif = { module = "io.coil-kt:coil-gif", version.ref = "coilCompose" }

# AndroidX
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
appcompat-resources = { module = "androidx.appcompat:appcompat-resources", version.ref = "appcompat" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-lifecycle-runtimeCompose = { group = "androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidxLifecycle" }
androidx-lifecycle-runtimeTesting = { group = "androidx.lifecycle", name = "lifecycle-runtime-testing", version.ref = "androidxLifecycle" }
androidx-lifecycle-viewModelCompose = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "androidxLifecycle" }
androidx-lint-gradle = { group = "androidx.lint", name = "lint-gradle", version.ref = "androidxLintGradle" }
app-update = { module = "com.google.android.play:app-update-ktx", version.ref = "appUpdates" }
androidx-browser = { module = "androidx.browser:browser", version.ref = "androidxBrowser" }
multidex = { module = "androidx.multidex:multidex", version.ref = "multidex" }

# Kotlin
kotlin-bom = { group = "org.jetbrains.kotlin", name = "kotlin-bom", version.ref = "kotlin" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "ktxSerialization" }
coroutine-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutine" }

# Koin
koin-bom = { module = "io.insert-koin:koin-bom", version.ref = "koinBom" }
koin-core = { module = "io.insert-koin:koin-core" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose" }
koin-androidx-compose-navigation = { module = "io.insert-koin:koin-androidx-compose-navigation" }
koin-annotations = { module = "io.insert-koin:koin-annotations", version.ref = "koinAnnotations" }
koin-androidx-workmanager = { module = "io.insert-koin:koin-androidx-workmanager" }
koin-ksp-compiler = { module = "io.insert-koin:koin-ksp-compiler", version.ref = "koinAnnotations" }

# Firebase
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
firebase-analytics = { group = "com.google.firebase", name = "firebase-analytics" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics" }
firebase-performance = { group = "com.google.firebase", name = "firebase-perf" }
firebase-messaging = { module = "com.google.firebase:firebase-messaging" }
firebase-auth = { module = "com.google.firebase:firebase-auth" }

# Retrofit
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-converter = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version.ref = "ktxSerConverter" }
retrofit-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp3" }

# RoomDB
room = { module = "androidx.room:room-runtime", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
security-crypto-ktx = { module = "androidx.security:security-crypto-ktx", version.ref = "crypto" }
sqlcipher = { module = "net.zetetic:sqlcipher-android", version.ref = "sqlcipher" }
sqlite = { module = "androidx.sqlite:sqlite", version.ref = "sqlite" }

# Other Libraries
splashScreen = { module = "androidx.core:core-splashscreen", version.ref = "splashScreen" }
lint-api = { group = "com.android.tools.lint", name = "lint-api", version.ref = "androidTools" }
lint-checks = { group = "com.android.tools.lint", name = "lint-checks", version.ref = "androidTools" }
lint-tests = { group = "com.android.tools.lint", name = "lint-tests", version.ref = "androidTools" }
google-auth = { module = "com.google.android.gms:play-services-auth", version.ref = "googleAuth" }
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
android-desugarJdkLibs = { group = "com.android.tools", name = "desugar_jdk_libs", version.ref = "androidDesugarJdkLibs" }
androidx-tracing-ktx = { group = "androidx.tracing", name = "tracing-ktx", version.ref = "androidxTracing" }
google-oss-licenses = { group = "com.google.android.gms", name = "play-services-oss-licenses", version.ref = "googleOss" }
google-oss-licenses-plugin = { group = "com.google.android.gms", name = "oss-licenses-plugin", version.ref = "googleOssPlugin" }
detekt-gradle = { group = "io.gitlab.arturbosch.detekt", name = "detekt-gradle-plugin", version.ref = "detekt" }

#Test Libraries
junit = { group = "junit", name = "junit", version.ref = "junit" }
coroutines-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "coroutine" }
truth = { module = "com.google.truth:truth", version.ref = "truth" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
kotlin-test = { group = "org.jetbrains.kotlin", name = "kotlin-test", version.ref = "kotlin" }
mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mockWebServer" }
room-testing = { module = "androidx.room:room-testing", version.ref = "room" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }

# Dependencies of the included build-logic
android-gradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "androidGradlePlugin" }
android-tools-common = { group = "com.android.tools", name = "common", version.ref = "androidTools" }
compose-gradlePlugin = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin" }
firebase-crashlytics-gradlePlugin = { group = "com.google.firebase", name = "firebase-crashlytics-gradle", version.ref = "firebaseCrashlyticsPlugin" }
kotlin-gradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
ksp-gradlePlugin = { group = "com.google.devtools.ksp", name = "com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
room-gradlePlugin = { group = "androidx.room", name = "room-gradle-plugin", version.ref = "room" }

[bundles]
appcompat = ["appcompat", "appcompat-resources"]
compose = ["androidx-activity-compose", "androidx-compose-foundation", "androidx-ui", "androidx-compose-ui-tooling", "androidx-compose-ui-tooling-preview", "androidx-ui-graphics", "compose-runtime", "compose-animation", "androidx-material3", "androidx-constraintlayout", "androidx-navigation"]
koin-android = ["koin-androidx-compose", "koin-androidx-compose-navigation", "koin-androidx-workmanager"]
coil = ["coil-compose", "coil-gif"]
firebase = ["firebase-crashlytics", "firebase-messaging", "firebase-auth", "google-auth"]
lifecycle = ["androidx-lifecycle-runtimeCompose", "androidx-lifecycle-runtimeTesting", "androidx-lifecycle-viewModelCompose"]
retrofit = ["retrofit", "retrofit-converter", "retrofit-interceptor"]
room = ["room", "room-ktx", "sqlcipher", "sqlite", "security-crypto-ktx"]
domain-test = ["junit", "coroutines-test", "truth", "mockk", "turbine"]
data-test = ["mockk", "truth", "mockwebserver", "turbine"]
app-test = ["androidx-junit", "robolectric", "mockk", "truth", "turbine"]

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
android-lint = { id = "com.android.lint", version.ref = "androidGradlePlugin" }
android-test = { id = "com.android.test", version.ref = "androidGradlePlugin" }
dependency-guard = { id = "com.dropbox.dependency-guard", version.ref = "dependencyGuard" }
firebase-crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "crashlyticsPlugin" }
firebase-perf = { id = "com.google.firebase.firebase-perf", version.ref = "firebasePerfPlugin" }
gms = { id = "com.google.gms.google-services", version.ref = "gmsPlugin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
room = { id = "androidx.room", version.ref = "room" }
secrets = { id = "com.google.android.libraries.mapsplatform.secrets-gradle-plugin", version.ref = "secrets" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }

# Plugins defined by this project
convention-android-application = { id = "convention.android.application" }
convention-android-application-compose = { id = "convention.android.application.compose" }
convention-android-application-firebase = { id = "convention.android.application.firebase" }
convention-android-application-flavors = { id = "convention.android.application.flavors" }
convention-android-application-jacoco = { id = "convention.android.application.jacoco" }
convention-android-feature = { id = "convention.android.feature" }
convention-android-library = { id = "convention.android.library" }
convention-android-library-compose = { id = "convention.android.library.compose" }
convention-android-library-jacoco = { id = "convention.android.library.jacoco" }
convention-android-lint = { id = "convention.android.lint" }
convention-android-room = { id = "convention.android.room" }
convention-android-test = { id = "convention.android.test" }
convention-koin = { id = "convention.koin" }
convention-jvm-library = { id = "convention.jvm.library" }

